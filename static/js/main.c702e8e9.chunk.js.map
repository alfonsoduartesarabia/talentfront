{"version":3,"sources":["utility/request.js","utility/slices/user.js","screens/registration.js","screens/login.js","screens/posting/posting.js","screens/profile/profile.v2.js","utility/slices/search.js","screens/entries/entries.js","components/footer.js","assets/talent_front_logo.bmp","components/navbar.js","screens/company/company.js","assets/worker-clipart.png","assets/professor.jpg","assets/student.jpg","assets/office.jpg","assets/talk.jpg","assets/classroom.jpg","assets/hiring-pipeline.jpg","screens/home.js","App.js","utility/sagas/requests/user.js","utility/sagas/handlers/user.js","utility/sagas/rootSaga.js","utility/store.js","serviceWorker.js","index.js"],"names":["cookies","Cookies","BASE_URL","window","origin","source","axios","CancelToken","createRequest","create","baseURL","params","cookie","get","postSearch","data","post","then","res","console","log","catch","err","postLogin","a","config","method","url","headers","set","sessionCookie","getProfile","id","cancel","userSlice","createSlice","name","initialState","reducers","getUser","setUser","state","action","userData","payload","logout","remove","addJob","title","company","description","updateEducation","school","degree","updateSkill","actions","Registration","useState","userType","setUserType","talentType","setTalentType","dispatch","useDispatch","getTalentType","htmlFor","type","placeholder","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","history","useHistory","className","onSubmit","event","preventDefault","postRegister","JSON","stringify","undefined","push","location","reload","onChange","target","value","required","defaultValue","disabled","to","Login","props","assign","ShowNotification","showNotification","handleClose","Modal","backdrop","keyboard","show","onHide","size","centered","Header","closeButton","Title","AddNewPosting","jobTitle","setJobTitle","companyName","setCompanyName","setDescription","salaryBottom","setSalaryBottom","salaryTop","setSalaryTop","requirements","setRequirements","setState","city","setCity","Body","Form","Row","Group","as","Col","Label","Control","parseInt","rows","split","Footer","Button","variant","onClick","postingData","postPosting","postingId","JobSection","handleShow","posting","isPostersPage","handleShowNotification","RenderedReqs","map","requirement","index","Card","datePosted","salaryRange","getApply","r","Text","PostingScreen","useParams","setShow","setShowNotification","setPosting","useEffect","getPosting","AddNewExperience","setCompany","setTitle","dateStart","setStartDate","dateEnd","setEndDate","isStillWorking","setIsStillWorking","loading","setLoading","Check","label","Spinner","animation","setTimeout","AddNewReview","user","review","setReview","score","setScore","revieweeId","reviewData","postReview","AddCompanyPage","mission","setMission","product","setProduct","numberEmployees","setNumberEmployees","locations","setLocations","companyData","postCompany","companyId","LeftSection","imageLink","setSkill","newSkill","setNewSkill","isEditing","setIsEditing","setSchool","setDegree","major","setMajor","educations","length","toggleEdit","handleImageSubmit","file","form","document","querySelector","formData","FormData","append","postUserImage","RenderedSkills","skills","skill","ListGroup","Item","handleRemoveSkill","style","color","isUsersPage","src","alt","padding","File","files","custom","FormControl","aria-label","aria-describedby","add","RightSection","handlePosting","handleReview","handleCompany","experiences","RenderedExperiences","experience","endDt","startDt","reviews","RenderedReviews","reviewerName","stars","link","isProfessor","ProfileScreen","showAddExperience","setShowAddExperience","showAddPosting","setShowAddPosting","showReview","setShowReview","showCompany","setShowCompany","currUser","useSelector","getImageLink","searchSlice","getSearch","search","setSearch","searchData","updateQuery","EntriesScreen","entries","setEntries","query","emptySearch","filter","subFilter","searchTerm","renderedPostings","entry","ShowMessage","showMessage","handleLink","page","RenderMessage","notifications","message","applyName","postingLink","profileLink","Navbar","setSearchTerm","setFilter","setShowMessage","LogoImage","Object","keys","CompanySection","RenderedLocations","CompanyScreen","getCompany","SearchSection","IntroSection","Jumbotron","Media","StudentImage","width","height","OfficeImage","ProfessorImage","WorkerImage","TalkImage","ClassroomImage","HiringImage","HomeScreen","App","CookiesProvider","path","exact","postJobUser","job","postEducationUser","education","isFinished","postSkill","handleGetUser","handleAddJob","handleUpdateDegree","handleUpdateSkill","call","response","put","watcherSaga","takeLatest","takeEvery","sagaMiddleWare","createSagaMiddleware","reducer","combineReducers","userReducer","searchReducer","store","configureStore","middleware","getDefaultMiddleware","thunk","devTools","run","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c702e8e9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\n// const BASE_URL =\n//   process.env.REACT_APP_ENV === \"PROD\" ? window.origin : \"http://localhost\";\n\n// @Alfonso works for me when yarn and docker are running\n// const BASE_URL = \"http://localhost:8080\";\nconst BASE_URL = window.origin;\n\nconst source = axios.CancelToken.source(); // cancel a request using a cancel token\n// {cancelToken: source.token}\n/**\n * https://github.com/axios/axios#cancellation\n * https://dev.to/otamnitram/react-useeffect-cleanup-how-and-when-to-use-it-2hbm\n */\n\nconst createRequest = () =>\n  axios.create({\n    // withCredentials: true,\n    baseURL: BASE_URL,\n    params: {\n      cookie: cookies.get(\"talentfront-session\"),\n    },\n  });\n\nexport { createRequest, BASE_URL };\n// const cookieAsQueryParam = () => {\n//   return \"?cookie=\" + document.cooki;\n// };\n\nexport function postSearch(data) {\n  return createRequest()\n    .post(\"/backend/api/search\", data)\n    .then((res) => {\n      console.log(res);\n      return res;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nexport const postLogin = async (data) => {\n  const config = {\n    // withCredentials: true,\n    method: \"post\",\n    url: BASE_URL + \"/backend/api/login\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      // \"Access-Control-Allow-Origin\": \"*\"\n    },\n    data: data,\n  };\n\n  try {\n    const res = await axios(config);\n    cookies.set(res.data.sessionCookie);\n    return res;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const postRegister = (data) => {\n  const config = {\n    method: \"post\",\n    url: BASE_URL + \"/backend/api/register\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    data: data,\n  };\n  // @TODO look into this later.\n  return axios(config)\n    .then((res) => {\n      cookies.set(res.data.sessionCookie);\n      return res;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const getImageLink = (isUsersPage, id) => {\n  return isUsersPage\n    ? `${BASE_URL}/backend/api/user-image/?cookie=${cookies.get(\n        \"talentfront-session\"\n      )}`\n    : `${BASE_URL}/backend/api/user-image/${id}`;\n};\n\nexport const postUserImage = (formData) => {\n  axios\n    .post(\n      BASE_URL +\n        `/backend/api/user-image/upload?cookie=${cookies.get(\n          \"talentfront-session\"\n        )}`,\n      formData,\n      {\n        \"Content-Type\": \"Multipart-FormData\",\n      }\n    )\n    .then((res) => {\n      console.log(\"RECEIVED IMAGE URL\", res.config.url);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const getProfile = (id) => {\n  console.log(\"SESSION COOKIE WE HAVE IS:\", cookies.get(\"talentfront-session\"));\n  return createRequest()\n    .get(\"backend/api/user/\" + id)\n    .then((res) => {\n      console.log(\"RESPONSE FROM\", BASE_URL + \"/backend/api/user/\" + id);\n      console.log(res);\n      return res;\n    })\n    .catch((err) => {\n      console.log(\"Get profile request failed: /backend/api/user/\" + id);\n      console.log(err);\n      source.cancel();\n      return \"err\";\n    });\n};\n\nexport const getPosting = (id) => {\n  console.log(\"SESSION COOKIE WE HAVE IS:\", cookies.get(\"talentfront-session\"));\n  return createRequest()\n    .get(\"backend/api/posting/\" + id)\n    .then((res) => {\n      console.log(\"RESPONSE FROM\", BASE_URL + \"/backend/api/posting/\" + id);\n      console.log(res);\n      return res;\n    })\n    .catch((err) => {\n      console.log(\"Get posting request failed: /backend/api/posting/\" + id);\n      console.log(err);\n      source.cancel();\n      return \"err\";\n    });\n};\n\nexport const getCompany = (id) => {\n  return createRequest()\n    .get(\"backend/api/company/\" + id)\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => {\n      return \"err\";\n    });\n};\n\nexport const postPosting = (postingData) => {\n  return createRequest()\n    .post(\"/backend/api/posting\", postingData)\n    .then((res) => {\n      console.log(res);\n      return res;\n    });\n};\n\nexport const postReview = (reviewData) => {\n  return createRequest()\n    .post(\"/backend/api/user/review\", reviewData)\n    .then((res) => {\n      console.log(res);\n      return res;\n    });\n};\n\nexport const getApply = (id) => {\n  return createRequest()\n    .get(`/backend/api/apply/${id}`)\n    .then((res) => {\n      console.log(res.data);\n      return res;\n    });\n};\n\nexport const postCompany = (companyData) => {\n  return createRequest()\n    .post(\"/backend/api/company\", companyData)\n    .then((res) => {\n      console.log(res);\n      return res;\n    });\n};\n\nexport const postAddJob = (job) => {\n  return createRequest()\n    .post(\"backend/api/user/experience\", job)\n    .then((res) => {\n      console.log(res);\n      return res;\n    });\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {},\n  reducers: {\n    getUser() {},\n    setUser: (state, action) => {\n      const userData = action.payload;\n      console.log(action);\n      if (typeof userData !== \"object\") return;\n      return { ...state, ...userData };\n    },\n    logout: (state, action) => {\n      cookies.remove(\"talentfront-session\");\n      setUser({});\n      return {};\n    },\n    addJob: (state, action) => {\n      const { title, company, description } = action.payload;\n    },\n    updateEducation: (state, action) => {\n      const { school, degree } = action.payload;\n      return { ...state, school, degree };\n    },\n    updateSkill() {},\n  },\n});\n\nexport const {\n  setUser,\n  logout,\n  getUser,\n  addJob,\n  updateEducation,\n  updateSkill,\n} = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React, {useState} from \"react\";\nimport \"./registration.css\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {postRegister} from \"../utility/request\";\nimport {useDispatch} from \"react-redux\";\nimport {getUser} from \"../utility/slices/user.js\";\n\nconst employerFields = () => (\n    <div>\n        <label htmlFor=\"first-name\">\n            <b>Company Name</b>\n        </label>\n        <input\n            type=\"text\"\n            placeholder=\"Enter your company name\"\n            name=\"company-name\"\n            id=\"company-name\"\n        />\n\n        <label htmlFor=\"first-name\">\n            <b>Location</b>\n        </label>\n        <input\n            type=\"text\"\n            placeholder=\"Enter your location\"\n            name=\"location\"\n            id=\"location\"\n        />\n    </div>\n);\nconst teacherFields = () => (\n    <div>\n        <label htmlFor=\"first-name\">\n            <b>School Name</b>\n        </label>\n        <input\n            type=\"text\"\n            placeholder=\"Enter your school\"\n            name=\"school-name\"\n            id=\"school-name\"\n        />\n\n        <label htmlFor=\"first-name\">\n            <b>Field</b>\n        </label>\n        <input type=\"text\" placeholder=\"Enter your major\" name=\"major\"\n               id=\"major\"/>\n    </div>\n);\nconst studentFields = () => (\n    <div>\n        <label htmlFor=\"first-name\">\n            <b>School Name</b>\n        </label>\n        <input\n            type=\"text\"\n            placeholder=\"Enter your school\"\n            name=\"school-name\"\n            id=\"school-name\"\n        />\n\n        <label htmlFor=\"first-name\">\n            <b>Degree</b>\n        </label>\n        <input\n            type=\"text\"\n            placeholder=\"Enter your degree\"\n            name=\"degree\"\n            id=\"degree\"\n        />\n\n        <label htmlFor=\"first-name\">\n            <b>Major</b>\n        </label>\n        <input type=\"text\" placeholder=\"Enter your field\" name=\"field\"\n               id=\"field\"/>\n    </div>\n);\nconst gradFields = () => (\n    <div>\n        <label htmlFor=\"first-name\">\n            <b>Highest Earned Degree</b>\n        </label>\n        <input\n            type=\"text\"\n            placeholder=\"Enter your highest earned degree\"\n            name=\"degree\"\n            id=\"degree\"\n        />\n\n        <label htmlFor=\"first-name\">\n            <b>Employer</b>\n        </label>\n        <input\n            type=\"text\"\n            placeholder=\"Enter your employer\"\n            name=\"employer\"\n            id=\"employer\"\n        />\n\n        <label htmlFor=\"first-name\">\n            <b>Title</b>\n        </label>\n        <input\n            type=\"text\"\n            placeholder=\"Enter your title\"\n            name=\"job-title\"\n            id=\"job-title\"\n        />\n    </div>\n);\n\nconst Registration = () => {\n    const [userType, setUserType] = useState(\"\");\n    const [talentType, setTalentType] = useState(\"\");\n    let additionalFields = \"\";\n    const dispatch = useDispatch();\n\n    const getTalentType = () => {\n        if (talentType === \"student\") {\n            return studentFields();\n        } else if (talentType === \"recent-grad\") {\n            return gradFields();\n        }\n    };\n\n    const talentField = () => (\n        <div>\n            <label htmlFor=\"talent-type\">\n                <b>Indicate Type of Talent</b>\n            </label>\n            <select\n                defaultValue=\"\"\n                name=\"talent-type\"\n                id=\"talent-type\"\n                //onChange={(event) => setUserType(event.target.value)}\n                required\n                onChange={(e) => setTalentType(e.target.value)}\n            >\n                <option value=\"\" disabled>\n                    Select type of talent\n                </option>\n                <option value=\"recent-grad\" id=\"recent-grad\" name=\"recent-grad\">\n                    Graduate\n                </option>\n                <option value=\"student\" id=\"student\" name=\"student\">\n                    Student\n                </option>\n            </select>\n            <div>{getTalentType()}</div>\n        </div>\n    );\n\n    if (userType === \"talent\") {\n        additionalFields = talentField();\n    }\n    if (userType === \"recruiter\") {\n        additionalFields = employerFields();\n    }\n    if (userType === \"professor\") {\n        additionalFields = teacherFields();\n    }\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [firstName, setFirstName] = useState();\n    const [lastName, setLastName] = useState();\n    const history = useHistory();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = JSON.stringify({\n            email: email,\n            password: password,\n            userType: userType,\n            firstName: firstName,\n            lastName: lastName,\n        });\n\n        postRegister(data).then((res) => {\n            console.log(res);\n            if (res === undefined) {\n                console.log(\"Error when registering.\");\n            } else {\n                dispatch(getUser());\n                history.push(\"/profile\");\n                window.location.reload(false);\n            }\n        });\n    };\n    return (\n        <div>\n            <div className=\"registration-container\">\n                <h1>Registration</h1>\n                <p className=\"info-paragraph\">\n                    Please fill out the form to create account.\n                </p>\n\n                <form className=\"register-form\" onSubmit={handleSubmit}>\n\n                    <label htmlFor=\"first-name\">\n                        <b>First Name</b>\n                    </label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter first name\"\n                        name=\"first-name\"\n                        id=\"first-name\"\n                        onChange={(event) => setFirstName(event.target.value)}\n                        required\n                    />\n\n                    <label htmlFor=\"last-name\">\n                        <b>Last Name</b>\n                    </label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter last name\"\n                        name=\"last-name\"\n                        id=\"last-name\"\n                        onChange={(event) => setLastName(event.target.value)}\n                        required\n                    />\n                    <label htmlFor=\"email\">\n                        <b>Email</b>\n                    </label>\n                    <input\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                        name=\"email\"\n                        id=\"email\"\n                        onChange={(event) => setEmail(event.target.value)}\n                        required\n                    />\n\n                    <label htmlFor=\"password\">\n                        <b>Password</b>\n                    </label>\n                    <input\n                        type=\"password\"\n                        placeholder=\"Create password, max length 20\"\n                        name=\"password\"\n                        id=\"password\"\n                        onChange={(event) => setPassword(event.target.value)}\n                        required\n                    />\n\n                    <label htmlFor=\"user-type\">\n                        <b>Indicate Type of User</b>\n                    </label>\n                    <select\n                        defaultValue=\"\"\n                        name=\"user-type\"\n                        id=\"user-type\"\n                        onChange={(event) => setUserType(event.target.value)}\n                        required\n                    >\n                        <option value=\"\" disabled>\n                            Select your option\n                        </option>\n                        <option value=\"talent\">Talent</option>\n                        <option value=\"recruiter\">Recruiter</option>\n                        <option value=\"professor\">Professor</option>\n                        <option value=\"company\">Company</option>\n\n                        {/* <option value=\"student\">Student</option>\n            <option value=\"recent-grad\">Graduate</option>\n            <option value=\"teacher\">Teacher</option>\n            <option value=\"recruiter\">Recruiter</option> */}\n                    </select>\n                    {/*{additionalFields}*/}\n\n                    <button type=\"submit\" className=\"register-button\">\n                        Register\n                    </button>\n                    <p>\n                        Already have an account? <Link to=\"/login\">Sign\n                        in</Link>\n                    </p>\n                </form>\n                <p className=\"terms-of-service\">\n                    Terms of Service: All information provided to TalentFront will\n                    be displayed for any user, besides emails and passwords which\n                    are not displayed anywhere on TalentFront website. We use a\n                    standard salt and hash verification for saving passwords in\n                    the database. So in the database there are two columns for\n                    the password logic, the first being a salt the second being\n                    the hash of the salt and password. When a user tries to login\n                    we pull up the authentication record, grab the salt, add it\n                    to the password, hash it and verify that the hashes match.\n                    By using this approach we protect against rainbow table attacks.\n                </p>\n            </div>\n            {/* <Footer/> */}\n        </div>\n    );\n};\n\nexport default Registration;\n\n// const handleSubmit = (event) => {\n//   event.preventDefault()\n//   const data = JSON.stringify({\n//       \"email\": email,\n//       \"password\": password,\n//       \"userType\": userType,\n//       \"firstName\": firstName,\n//       \"lastName\": lastName\n//   });\n\n//   // const baseUrl = window.origin;\n//   // const baseUrl = 'http://localhost';\n//   const baseUrl = 'http://localhost:8080';\n\n//   const config = {\n//       method: 'post',\n//       // withCredentials: true,\n//       url: baseUrl + '/backend/api/register',\n//       headers: {\n//           'Content-Type': 'application/json'\n//       },\n//       data: data\n//   };\n//   axios(config)\n//   .then( res => {\n//       document.cookie = res.data.sessionCookie\n//       history.push(\"/profile\")\n//   })\n//   .catch( err => {\n//       console.log(err)\n//   });\n// }\n","import React, { useState } from \"react\";\nimport \"./registration.css\";\nimport { Link } from \"react-router-dom\";\nimport { postLogin } from \"../utility/request\";\n\nconst Login = (props) => {\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = JSON.stringify({\n      email: email,\n      password: password,\n    });\n\n    postLogin(data).then((res) => {\n      if (res === undefined) {\n        console.log(\"Error when logging in.\");\n      } else {\n        window.location.assign(\"/profile\");\n      }\n    });\n  };\n  return (\n    <div>\n      <div className=\"login-main\">\n        <form className=\"login-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            id=\"email\"\n            onChange={(event) => setEmail(event.target.value)}\n            required\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            id=\"password\"\n            onChange={(event) => setPassword(event.target.value)}\n            required\n          />\n          <button type=\"submit\" className=\"enter-button\">\n            Login\n          </button>\n          <p>\n            Don't have an account? <Link to=\"/register\">Sign up</Link>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, {useState, useEffect} from \"react\";\nimport \"./posting.scss\";\nimport { Button } from \"react-bootstrap\";\nimport {\n  Form,\n  Col,\n  Card,\n  Modal,\n} from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  getApply,\n  getPosting, postPosting,\n} from \"../../utility/request\";\n\nexport const ShowNotification = (props) => {\n  const {showNotification, handleClose} = props;\n\n  return (\n      <Modal\n          backdrop=\"static\"\n          keyboard={false}\n          show={showNotification}\n          onHide={handleClose}\n          size=\"lg\"\n          centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>We've notified the Poster of Your Interest</Modal.Title>\n        </Modal.Header>\n      </Modal>);\n};\nexport const AddNewPosting = (props) => {\n  const { show, handleClose } = props;\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [salaryBottom, setSalaryBottom] = useState(0);\n  const [salaryTop, setSalaryTop] = useState(0);\n  const [requirements, setRequirements] = useState([]);\n  const [state, setState] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  const handleSave = () => {\n    let postingData = {\n      jobTitle,\n      companyName,\n      salaryBottom,\n      salaryTop,\n      description,\n      requirements,\n      state,\n      city,\n    };\n    postPosting(postingData)\n      .then(res => window.location.assign(`/posting/${res?.data?.postingId}`))\n  };\n\n  return (\n      <Modal\n          backdrop=\"static\"\n          keyboard={false}\n          show={show}\n          onHide={handleClose}\n          size=\"lg\"\n          centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Create New Job Posting</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Job title</Form.Label>\n                <Form.Control\n                    onChange={(event) => setJobTitle(event.target.value)}\n                    placeholder=\"Enter job title\"\n                />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Company Name</Form.Label>\n                <Form.Control\n                    onChange={(event) => setCompanyName(event.target.value)}\n                    placeholder=\"Enter company name\"\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Salary Top</Form.Label>\n                <Form.Control\n                    onChange={(event) => setSalaryTop(parseInt(event.target.value))}\n                    placeholder=\"Enter a number\"\n                />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Salary Bottom</Form.Label>\n                <Form.Control\n                    onChange={(event) => setSalaryBottom(parseInt(event.target.value))}\n                    placeholder=\"Enter a number\"\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>City</Form.Label>\n                <Form.Control\n                    onChange={(event) => setCity(event.target.value)}\n                    placeholder=\"Enter the city\"\n                />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>State</Form.Label>\n                <Form.Control\n                    onChange={(event) => setState(event.target.value)}\n                    placeholder=\"Enter the state\"\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                  onChange={(event) => setDescription(event.target.value)}\n                  as=\"textarea\"\n                  rows={4}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Requirements</Form.Label>\n              <Form.Control\n                  onChange={(event) => setRequirements(event.target.value.split(','))}\n                  as=\"textarea\"\n                  placeholder=\"Enter requirements\"\n                  rows={1}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSave}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n  );\n};\n\nconst JobSection = (props) => {\n  const { handleShow, posting, isPostersPage, id, handleShowNotification } = props;\n\n  const RenderedReqs = posting?.requirements?.map((requirement, index) => {\n    return (\n        <li className=\"individual-skill\" key={index}>\n          * {requirement}\n        </li>\n    );\n  });\n\n  const handleApply = () => {\n    console.log(\"logging out\");\n    handleShowNotification()\n    getApply(id).then(r => console.log(\"HI\"));\n  };\n\n\n  return (!isPostersPage) ?\n      (\n      <div className=\"right-section\">\n        <Card key=\"posting\" className=\"article\">\n          <Card.Header className=\"card-head\">\n            <div className=\"article-head\">\n              <h2 className=\"article-title\">{posting.companyName} - {posting.jobTitle}</h2>\n              <h2 className=\"article-date\">Date Posted {posting.datePosted}</h2>\n            </div>\n            <div className=\"article-sub-head\">\n              <h4 className=\"article-sub-title\">Salary Range: {posting.salaryRange}</h4>\n              <button className=\"navbar-btn\" onClick={handleApply}>\n                Apply\n              </button>\n            </div>\n          </Card.Header>\n          <Card.Body>\n            <Card.Text>{posting.description}</Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <h5>Requirements: </h5>\n            {RenderedReqs}\n          </Card.Footer>\n        </Card>\n      </div>\n  ) : (\n          <div className=\"right-section\">\n            <Card className=\"add-experience\" onClick={handleShow}>\n              <div>Create Posting</div>\n            </Card>\n          </div>\n      );\n};\n\nconst PostingScreen = (props) => {\n  let id = useParams().id;\n  if (id === undefined) id = \"\";\n  const isPostersPage = id === \"\";\n  const [show, setShow] = useState(false);\n  const [showNotification, setShowNotification] = useState(false);\n  const [posting, setPosting] = useState({});\n  const handleClose = () => {\n    setShow(false);\n    setShowNotification(false)\n  }\n  const handleShow = () => setShow(true);\n  const handleShowNotification = () => setShowNotification(true);\n\n  useEffect(() => {\n    if (id !== \"\") {\n      getPosting(id).then((res) => {\n        setPosting(res.data);\n      });\n    }\n  }, [id, setPosting]);\n\n  return (\n      <div>\n        <AddNewPosting show={show} handleClose={handleClose} />\n        <ShowNotification showNotification={showNotification} handleClose={handleClose} />\n        <div className=\"profile-screen-container\">\n          <JobSection id = {id} posting={posting} handleShow={handleShow} handleShowNotification={handleShowNotification} isPostersPage={isPostersPage} />\n        </div>\n      </div>\n  );\n};\n\nexport default PostingScreen;\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport \"./profile.scss\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport {\n  Form,\n  Row,\n  Col,\n  Card,\n  Fade,\n  Modal,\n  ListGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  getImageLink,\n  getProfile,\n  postCompany,\n  postReview,\n  postUserImage,\n} from \"../../utility/request\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { BsFilePlus } from \"react-icons/bs\";\nimport { BiPencil } from \"react-icons/bi\";\nimport { FaCheck } from \"react-icons/fa\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getUser,\n  addJob,\n  updateEducation,\n  updateSkill,\n} from \"../../utility/slices/user\";\nimport { AddNewPosting } from \"../posting/posting\";\n\nconst AddNewExperience = (props) => {\n  const dispatch = useDispatch();\n  const { show, handleClose } = props;\n  const [company, setCompany] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [dateStart, setStartDate] = useState();\n  const [dateEnd, setEndDate] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [isStillWorking, setIsStillWorking] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleSave = () => {\n    setLoading(true);\n    let job = {\n      title,\n      company,\n      dateStart,\n      dateEnd,\n      description,\n    };\n    dispatch(addJob(job));\n    dispatch(getUser());\n    setTimeout(function () {\n      window.location.reload(false);\n    }, 1000);\n  };\n\n  return (\n    <Modal\n      backdrop=\"static\"\n      keyboard={false}\n      show={show}\n      onHide={handleClose}\n      size=\"lg\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>New Job Experience</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>Job title</Form.Label>\n              <Form.Control\n                onChange={(event) => setTitle(event.target.value)}\n                placeholder=\"Enter job title\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Company Name</Form.Label>\n              <Form.Control\n                onChange={(event) => setCompany(event.target.value)}\n                placeholder=\"Enter company name\"\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>Started Date</Form.Label>\n              <Form.Control\n                type=\"month\"\n                name=\"started date\"\n                placeholder=\"Start Date\"\n                onChange={(event) => setStartDate(event.target.value + \"-01\")}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Row>\n                <Col>\n                  <Form.Label>End Date</Form.Label>\n                </Col>\n                <Col>\n                  <Form.Check\n                    className=\"float-right\"\n                    type=\"checkbox\"\n                    id=\"default-checkbox\"\n                    label=\"Current\"\n                    onChange={(event) => {\n                      setIsStillWorking(!isStillWorking);\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Form.Control\n                type=\"month\"\n                name=\"ended date\"\n                placeholder=\"End Date\"\n                disabled={isStillWorking}\n                onChange={(event) => setEndDate(event.target.value + \"-01\")}\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              onChange={(event) => setDescription(event.target.value)}\n              as=\"textarea\"\n              rows={4}\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        {loading ? <Spinner animation=\"border\" variant=\"primary\" /> : null}\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleSave}>\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst AddNewReview = (props) => {\n  const { show, handleClose, user } = props;\n  const [review, setReview] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [score, setScore] = useState(5);\n  const revieweeId = props.id;\n\n  const handleSave = () => {\n    setLoading(true);\n    let reviewData = {\n      revieweeId,\n      review,\n      score,\n    };\n    postReview(reviewData).then((res) => console.log(res.data));\n    setTimeout(function () {\n      window.location.reload(false);\n    }, 500);\n  };\n\n  return (\n    <Modal\n      backdrop=\"static\"\n      keyboard={false}\n      show={show}\n      onHide={handleClose}\n      size=\"lg\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          New Review for {user.firstName} {user.lastName}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group>\n            <Form.Label>Rate them out of 5</Form.Label>\n            <Form.Control\n              onChange={(event) => setScore(parseInt(event.target.value))}\n              as=\"select\"\n            >\n              <option>5</option>\n              <option>4</option>\n              <option>3</option>\n              <option>2</option>\n              <option>1</option>\n            </Form.Control>\n          </Form.Group>\n        </Form>\n        <Form>\n          <Form.Group>\n            <Form.Label>Review</Form.Label>\n            <Form.Control\n              onChange={(event) => setReview(event.target.value)}\n              as=\"textarea\"\n              rows={4}\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        {loading ? <Spinner animation=\"border\" variant=\"primary\" /> : null}\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleSave}>\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst AddCompanyPage = (props) => {\n  const { show, handleClose, user } = props;\n  const [companyName, setCompanyName] = useState(\"\");\n  const [mission, setMission] = useState(\"\");\n  const [product, setProduct] = useState(\"\");\n  const [numberEmployees, setNumberEmployees] = useState(0);\n  const [locations, setLocations] = useState([]);\n\n  const handleSave = () => {\n    let companyData = {\n      companyName,\n      mission,\n      product,\n      numberEmployees,\n      locations,\n    };\n    postCompany(companyData).then((res) =>\n      window.location.assign(`/company/${res?.data?.companyId}`)\n    );\n  };\n\n  return (\n    <Modal\n      backdrop=\"static\"\n      keyboard={false}\n      show={show}\n      onHide={handleClose}\n      size=\"lg\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Create a New Company Page</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>Company Name</Form.Label>\n              <Form.Control\n                onChange={(event) => setCompanyName(event.target.value)}\n                placeholder=\"Enter Company Name\"\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Number of Employees</Form.Label>\n              <Form.Control\n                onChange={(event) =>\n                  setNumberEmployees(parseInt(event.target.value))\n                }\n                placeholder=\"Enter Number of Employees\"\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Group>\n            <Form.Label>Product</Form.Label>\n            <Form.Control\n              onChange={(event) => setProduct(event.target.value)}\n              as=\"textarea\"\n              rows={3}\n              placeholder=\"Describe your Product\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Mission</Form.Label>\n            <Form.Control\n              onChange={(event) => setMission(event.target.value)}\n              as=\"textarea\"\n              rows={3}\n              placeholder=\"Describe your company's mission\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Locations</Form.Label>\n            <Form.Control\n              onChange={(event) => setLocations(event.target.value.split(\",\"))}\n              as=\"textarea\"\n              placeholder=\"Enter Your Company's Locations\"\n              rows={1}\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleSave}>\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nconst LeftSection = (props) => {\n  const dispatch = useDispatch();\n  const { user } = props;\n  const { imageLink, setSkill } = props;\n  const [newSkill, setNewSkill] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [school, setSchool] = useState(\"\");\n  const [degree, setDegree] = useState(\"\");\n  const [major, setMajor] = useState(\"\");\n\n  useEffect(() => {\n    if (user.educations && user.educations.length) {\n      setSchool(user.educations[0].school);\n      setDegree(user.educations[0].degree);\n      setMajor(user.educations[0].major);\n    }\n  }, [user]);\n  const toggleEdit = () => {\n    if (isEditing) {\n      dispatch(updateEducation({ school, degree, major }));\n    }\n    setIsEditing(!isEditing);\n  };\n\n  const addSkill = (event) => {\n    console.log(\"ADD SKILL UI fired\");\n    dispatch(\n      updateSkill({\n        add: [newSkill],\n      })\n    );\n    setNewSkill(\"\");\n    dispatch(getUser());\n    setTimeout(function () {\n      window.location.reload(false);\n    }, 500);\n  };\n\n  const handleRemoveSkill = (skill) => {\n    dispatch(\n      updateSkill({\n        remove: [skill],\n      })\n    );\n    dispatch(getUser());\n    window.location.reload(false);\n  };\n\n  const handleImageSubmit = (file) => {\n    const form = document.querySelector(\"form\");\n    const formData = new FormData(form);\n    formData.append(\"image\", file);\n    postUserImage(formData);\n    setTimeout(function () {\n      window.location.reload(false);\n    }, 500);\n  };\n\n  const RenderedSkills = user.skills?.map((skill, index) => {\n    return (\n      <ListGroup.Item className=\"individual-skill\" key={index}>\n        {skill}\n        {isEditing ? (\n          <RiDeleteBin5Fill\n            onClick={() => handleRemoveSkill(skill)}\n            style={{ color: \"#dc3545\" }}\n          />\n        ) : null}\n      </ListGroup.Item>\n    );\n  });\n\n  return (\n    <div className=\"personals\">\n      <Card className=\"profile-details\">\n        <div className=\"edit-profile\">\n          {props.isUsersPage ? (\n            isEditing ? (\n              <FaCheck onClick={toggleEdit} />\n            ) : (\n              <BiPencil onClick={toggleEdit} />\n            )\n          ) : (\n            <div />\n          )}\n        </div>\n        <img className=\"profile-image\" src={imageLink} alt=\"profile\" />\n        {props.isUsersPage ? (\n          <Form className=\"profile-image-upload\" style={{ padding: \"2%\" }}>\n            <Form.File\n              id=\"custom-file\"\n              label=\"upload image\"\n              onChange={(event) => handleImageSubmit(event.target.files[0])}\n              custom\n            />\n          </Form>\n        ) : (\n          <div></div>\n        )}\n        <div className=\"profile-name\">\n          {user.firstName + \" \" + user.lastName}\n        </div>\n        <div className=\"education\">\n          {isEditing ? (\n            <Form>\n              <Form.Group>\n                <FormControl\n                  as=\"select\"\n                  onChange={(event) => setDegree(event.target.value)}\n                  value={degree}\n                >\n                  <option label=\"Associate in Arts\">AA</option>\n                  <option label=\"Bachelor of Arts\">BA</option>\n                  <option label=\"Bachelor of Science\">BS</option>\n                  <option label=\"Masters\">MA</option>\n                  <option label=\"Master of Business Administration\">MBA</option>\n                  <option label=\"Doctorate\">D</option>\n                </FormControl>\n              </Form.Group>\n              <Form.Group>\n                <FormControl\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  placeholder=\"School\"\n                  onChange={(event) => setSchool(event.target.value)}\n                  value={school}\n                />\n              </Form.Group>\n              <Form.Group>\n                <FormControl\n                  aria-label=\"Small\"\n                  aria-describedby=\"inputGroup-sizing-sm\"\n                  placeholder=\"Major\"\n                  onChange={(event) => setMajor(event.target.value)}\n                  value={major}\n                />\n              </Form.Group>\n            </Form>\n          ) : (\n            <>\n              <div className=\"text-muted\">\n                {degree !== \"\"\n                  ? degree\n                  : props.isUsersPage\n                  ? \"Add a Degree\"\n                  : \"Degree - Not Available\"}\n              </div>\n              <div className=\"text-muted\">\n                {school\n                  ? school\n                  : props.isUsersPage\n                  ? \"Add a School\"\n                  : \"School - Not Available\"}\n              </div>\n              <div className=\"text-muted\">\n                {major\n                  ? major\n                  : props.isUsersPage\n                  ? \"Add a Major\"\n                  : \"Major - Not Available\"}\n              </div>\n            </>\n          )}\n        </div>\n      </Card>\n      <Card>\n        <Card.Header>Skills</Card.Header>\n        <ListGroup variant=\"flush\">\n          {user.skills && user.skills.length !== 0 ? (\n            RenderedSkills\n          ) : (\n            <ListGroup.Item className=\"individual-skill\">\n              {props.isUsersPage ? \"Add your first skill\" : \"\"}\n            </ListGroup.Item>\n          )}\n          {isEditing ? (\n            <ListGroup.Item className=\"add-skill\">\n              <FormControl\n                aria-label=\"Small\"\n                aria-describedby=\"inputGroup-sizing-sm\"\n                onChange={(event) => setNewSkill(event.target.value)}\n                value={newSkill}\n              />\n              <Button variant=\"outline-primary\" onClick={addSkill}>\n                Add Skill\n              </Button>\n            </ListGroup.Item>\n          ) : null}\n        </ListGroup>\n      </Card>\n    </div>\n  );\n};\n\nconst RightSection = (props) => {\n  const {\n    handleShow,\n    handlePosting,\n    user,\n    handleReview,\n    handleCompany,\n  } = props;\n  let experiences = user.experiences;\n  if (experiences === undefined) experiences = [];\n  const RenderedExperiences = experiences.map((experience, index) => {\n    return (\n      <Card key={index} className=\"article\">\n        <Card.Header className=\"card-head\">\n          <div className=\"article-head\">\n            <h2 className=\"article-title\">\n              {experience.company} - {experience.title}\n            </h2>\n            {experience.endDt === \"null\" ? (\n              <h2 className=\"article-date\">\n                {experience.startDt + \" to present\"}\n              </h2>\n            ) : (\n              <h2 className=\"article-date\">\n                {experience.startDt + \" - \" + experience.endDt}\n              </h2>\n            )}\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Card.Text>{experience.description}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  });\n  let reviews = user.reviews;\n  if (reviews === undefined) reviews = [];\n  const RenderedReviews = reviews.map((review, index) => {\n    return (\n      <Card key={index} className=\"article\">\n        <Card.Header className=\"card-head\">\n          <div className=\"article-head\">\n            <h5 className=\"article-title\">Review from {review.reviewerName}</h5>\n            <h5 className=\"article-date\">{review.stars}</h5>\n            <button\n              className=\"link-btn\"\n              onClick={() => {\n                window.location.assign(review.link);\n              }}\n            >\n              {\" \"}\n              Reviewer{\" \"}\n            </button>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Card.Text>{review.review}</Card.Text>\n        </Card.Body>\n      </Card>\n    );\n  });\n  return (\n    <div className=\"right-section\">\n      {RenderedExperiences.length ? RenderedExperiences : null}\n      {RenderedReviews.length ? RenderedReviews : null}\n      {props.isUsersPage ? (\n        <div className=\"add-experience\" onClick={handleShow}>\n          <div>Add Experience</div> <BsFilePlus />\n        </div>\n      ) : (\n        <div />\n      )}\n      {props.isUsersPage &&\n      (\"recruiter\" === props.user?.userType ||\n        \"company\" === props.user?.userType) ? (\n        <div className=\"add-experience\" onClick={handlePosting}>\n          <div>Create a Job Posting</div>\n          <BsFilePlus />\n        </div>\n      ) : (\n        <div />\n      )}\n      {props.isUsersPage && \"company\" === props.user?.userType ? (\n        <div className=\"add-experience\" onClick={handleCompany}>\n          <div>Create a Company Page</div>\n          <BsFilePlus />\n        </div>\n      ) : (\n        <div />\n      )}\n      {props.user?.isProfessor ? (\n        <div className=\"add-experience\" onClick={handleReview}>\n          <div>Add a review</div>\n          <BsFilePlus />\n        </div>\n      ) : (\n        <div />\n      )}\n    </div>\n  );\n};\n\nconst ProfileScreen = (props) => {\n  let id = useParams().id;\n  if (id === undefined) id = \"\";\n  const isUsersPage = id === \"\";\n  const [showAddExperience, setShowAddExperience] = useState(false);\n  const [showAddPosting, setShowAddPosting] = useState(false);\n  const [showReview, setShowReview] = useState(false);\n  const [showCompany, setShowCompany] = useState(false);\n  const currUser = useSelector((state) => state.user);\n  const [user, setUser] = useState(currUser);\n  const handleClose = () => {\n    setShowAddExperience(false);\n    setShowAddPosting(false);\n    setShowReview(false);\n    setShowCompany(false);\n  };\n  // let history = useHistory();\n  // if (Object.entries(user).length === 0) {\n  //   history.push(\"/\");\n  // }\n  const handleShowExperience = () => setShowAddExperience(true);\n  const handleShowPosting = () => setShowAddPosting(true);\n  const handleReview = () => setShowReview(true);\n  const handleShowCompany = () => setShowCompany(true);\n\n  useEffect(() => {\n    getProfile(id).then((res) => {\n      setUser(res?.data);\n    });\n  }, [id, setUser]);\n\n  const imageLink = getImageLink(isUsersPage, id);\n\n  return (\n    <div>\n      <AddNewExperience show={showAddExperience} handleClose={handleClose} />\n      <AddNewPosting show={showAddPosting} handleClose={handleClose} />\n      <AddNewReview\n        show={showReview}\n        handleClose={handleClose}\n        id={id}\n        user={user}\n      />\n      <AddCompanyPage show={showCompany} handleClose={handleClose} />\n      <div className=\"profile-screen-container\">\n        <LeftSection\n          user={user}\n          imageLink={imageLink}\n          isUsersPage={isUsersPage}\n        />\n        <RightSection\n          user={user}\n          handleShow={handleShowExperience}\n          handlePosting={handleShowPosting}\n          handleReview={handleReview}\n          handleCompany={handleShowCompany}\n          isUsersPage={isUsersPage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileScreen;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const searchSlice = createSlice({\n    name: \"search\",\n    initialState: {},\n    reducers: {\n        getSearch(state) {\n            console.log(\"getting search query\")\n            return state.search\n        },\n        setSearch: (state, action) => {\n            const searchData = action.payload;\n            return { ...state, ...searchData };\n        },\n        updateQuery: (state, action) => {\n            console.log(`action payload is: ${JSON.stringify(action)}`)\n            state.search = action.payload;\n        },\n    },\n});\n\nexport const { getSearch, setSearch, updateQuery } = searchSlice.actions;\n\nexport const selectSearch = (state) => state.search.search;\n\nexport default searchSlice.reducer;\n","import { useState, useEffect } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { postSearch } from \"../../utility/request\";\nimport \"./entries.scss\";\nimport {useHistory} from \"react-router-dom\";\nimport {updateQuery} from \"../../utility/slices/search\";\n\nconst EntriesScreen = (props) => {\n  const [entries, setEntries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  let query = useSelector((state) => state.search);\n  if (props.emptySearch) {\n    let newQuery = {\n      filter: \"\",\n      subFilter: \"\",\n      searchTerm: \"\",\n    };\n  }\n  useEffect(() => {\n    console.log(\"SENDING REQUEST TO BACKEND\");\n    console.log(JSON.stringify(query));\n    setLoading(false);\n    if (props.emptySearch) {\n      postSearch({\n        filter: \"\",\n        subFilter: \"\",\n        searchTerm: \"\",\n      })\n      .then(res => {\n        setEntries(res.data.entries)\n        setLoading(false)\n      })\n      .catch(err => {\n        console.log(err)\n        setLoading(false)\n      })\n    } else {\n      postSearch(query?.search)\n      .then(res => {\n        setEntries(res.data.entries)\n        setLoading(false)\n      })\n      .catch(err => {\n        console.log(err)\n        setLoading(false)\n      })\n    }\n  }, [query, props.emptySearch]);\n\n  let renderedPostings = entries.map((entry, index) => {\n    return (\n      <div className=\"job-post\" key={index}>\n        <div className=\"job-post-left\">\n          <div className=\"job-post-header\">\n            <div className=\"job-title\">\n              <h3>{entry.title}</h3>\n            </div>\n          </div>\n          <p> {entry.description} </p>\n        </div>\n        <div className=\"job-post-right\">\n          <div className=\"footer\">\n            <button className=\"link-btn\" onClick={() => {\n              history.push(entry.link)\n            }}> Page </button>\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  if (loading) {\n    return (\n      <div className=\"spin-wrapper\">\n        <Spinner animation=\"border\" variant=\"primary\" />\n      </div>\n    );\n  }\n  return (\n    <div>\n      <div className=\"job-posts-container\">{renderedPostings}</div>\n    </div>\n  );\n};\n\nexport default EntriesScreen;\n","import \"./footer.css\";\n\nconst Footer = (props) => {\n  return (\n    // <div className=\"footer-component\">\n    // <footer>\n    //   <p>Copyright © 2021 TalentFront All rights reserved.\n    //   </p>\n    // </footer>\n    // </div>\n\n    <div className=\"footer-component\">\n      <div className=\"footer-content\">\n      </div>\n      <div className=\"footer-bottom\" >SFSU Software Engineering Project CSC 648-848, Spring 2021. For Demonstration Only</div>\n    </div>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/talent_front_logo.dc6309a8.bmp\";","import React, { useState, useEffect } from \"react\";\nimport \"./navbar.sass\";\nimport { BsSearch } from \"react-icons/bs\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { updateQuery } from \"../utility/slices/search\";\nimport { logout } from \"../utility/slices/user\";\nimport { getProfile } from \"../utility/request\";\nimport { Modal } from \"react-bootstrap\";\nimport LogoImage from \"../assets/talent_front_logo.bmp\";\n\nexport const ShowMessage = (props) => {\n    const { showMessage, handleClose, user } = props;\n\n    const handleLink = (page) => {\n        window.location.assign(page);\n    };\n\n    const RenderMessage = () =>\n        user?.notifications?.map((message, index) => {\n            return (\n                <div className=\"individual-skill\" key={index}>\n                    <h4>{message?.applyName} has applied to your posting</h4>\n                    <h6>You can reach out to him at {message?.email}</h6>\n                    <button\n                        className=\"message-button\"\n                        onClick={() => handleLink(message?.postingLink)}\n                    >\n                        Posting\n                    </button>\n                    <button\n                        className=\"message-button\"\n                        onClick={() => handleLink(message?.profileLink)}\n                    >\n                        Applicant\n                    </button>\n                </div>\n            );\n        });\n\n    return (\n        <Modal\n            backdrop=\"static\"\n            keyboard={false}\n            show={showMessage}\n            onHide={handleClose}\n            size=\"lg\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    <h2>You've received these messages: </h2>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <RenderMessage></RenderMessage>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nconst Navbar = (props) => {\n    let history = useHistory();\n    const dispatch = useDispatch();\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [filter, setFilter] = useState(\"\");\n    const [user, setUser] = useState({});\n    const [showMessage, setShowMessage] = useState(false);\n\n    useEffect(() => {\n        getProfile(\"\").then((res) => {\n            setUser(res?.data);\n        });\n    }, []);\n\n    const handleSearch = (event) => {\n        event.preventDefault();\n        const query = {\n            filter: filter,\n            subFilter: \"\",\n            searchTerm: searchTerm,\n        };\n        console.log(query);\n        console.log(\"calling dispatch\");\n        dispatch(updateQuery(query));\n        history.push(\"/entries\");\n    };\n\n    const handleLogout = () => {\n        setUser({});\n        dispatch(logout());\n        setTimeout(() => {\n            window.location.assign(\"/login\");\n        }, 500);\n    };\n\n    const handleMessage = () => {\n        setShowMessage(true);\n    };\n    const handleClose = () => {\n        setShowMessage(false);\n    };\n\n    return (\n        <div>\n            <ShowMessage\n                showMessage={showMessage}\n                handleClose={handleClose}\n                user={user}\n            />\n            <div className=\"navbar-search\">\n                <Link to=\"/\">\n                    <img src={LogoImage} />{\" \"}\n                </Link>\n                <div className=\"search-bar-wrapper\">\n                    <form action=\"\">\n                        <div className=\"search-bar\">\n                            <input\n                                onChange={(event) =>\n                                    setSearchTerm(event.target.value)\n                                }\n                                type=\"text\"\n                            />\n                            <div className=\"search-bar-btn\">\n                                <BsSearch />\n                            </div>\n                            <select\n                                className=\"filter\"\n                                onChange={(event) =>\n                                    setFilter(event.target.value)\n                                }\n                            >\n                                <option value=\"\">Any</option>\n                                <option value=\"talent\">Talent</option>\n                                <option value=\"professor\">Professor</option>\n                                <option value=\"jobPosting\">Jobs</option>\n                                <option value=\"organization\">\n                                    Organizations\n                                </option>\n                            </select>\n                        </div>\n                        <button onClick={handleSearch} className=\"navbar-btn\">\n                            Search\n                        </button>\n                    </form>\n                </div>\n                <div className=\"navbar-right\">\n                    {user && Object.keys(user).length && user?.firstName ? (\n                        <>\n                            <Link to=\"/profile\">\n                                <button className=\"navbar-btn\">\n                                    {user.firstName}\n                                </button>\n                            </Link>\n                            <button\n                                className=\"navbar-btn\"\n                                onClick={handleLogout}\n                            >\n                                Logout\n                            </button>\n                            {user?.notifications?.length &&\n                            user?.notifications?.length !== 0 ? (\n                                <button\n                                    className=\"navbar-btn\"\n                                    onClick={handleMessage}\n                                >\n                                    Message!\n                                </button>\n                            ) : (\n                                <div />\n                            )}\n                        </>\n                    ) : (\n                        <Link to=\"/login\">\n                            <button className=\"navbar-btn\">Login</button>\n                        </Link>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Navbar;\n","import React, {useState, useEffect} from \"react\";\nimport \"./company.scss\";\nimport {\n  Card,\n} from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  getCompany,\n} from \"../../utility/request\";\n\nconst CompanySection = (props) => {\n  const { company } = props;\n\n  const RenderedLocations = company?.locations?.map((location, index) => {\n    return (\n        <li className=\"individual-skill\" key={index}>\n          * {location}\n        </li>\n    );\n  });\n\n  return (\n      <div className=\"right-section\">\n        <Card key=\"posting\" className=\"article\">\n          <Card.Header className=\"card-head\">\n            <div className=\"article-head\">\n              <h2 className=\"article-title\">{company.companyName}</h2>\n              <h5 className=\"article-date\">Number of Employees: {company.numberEmployees}</h5>\n            </div>\n          </Card.Header>\n          <Card.Body>\n            <h5 className=\"article-title\">Company's Mission</h5>\n            <Card.Text>{company.mission}</Card.Text>\n            <h5 className=\"article-title\">Company's Product</h5>\n            <Card.Text>{company.product}</Card.Text>\n          </Card.Body>\n          <Card.Footer>\n            <h5>Locations: </h5>\n            {RenderedLocations}\n          </Card.Footer>\n        </Card>\n      </div>\n  );\n};\n\nconst CompanyScreen = (props) => {\n  let id = useParams().id;\n  const [company, setCompany] = useState({});\n\n  useEffect(() => {\n    if (id !== \"\") {\n      getCompany(id).then((res) => {\n        setCompany(res.data);\n      });\n    }\n  }, [id, setCompany]);\n\n  return (\n      <div>\n        <div className=\"profile-screen-container\">\n          <CompanySection company={company}/>\n        </div>\n      </div>\n  );\n};\n\nexport default CompanyScreen;\n","export default __webpack_public_path__ + \"static/media/worker-clipart.58b9e131.png\";","export default __webpack_public_path__ + \"static/media/professor.112b615c.jpg\";","export default __webpack_public_path__ + \"static/media/student.c25f582f.jpg\";","export default __webpack_public_path__ + \"static/media/office.30610680.jpg\";","export default __webpack_public_path__ + \"static/media/talk.a9c5be67.jpg\";","export default __webpack_public_path__ + \"static/media/classroom.ebc4d459.jpg\";","export default __webpack_public_path__ + \"static/media/hiring-pipeline.0f06241d.jpg\";","import React, { useState } from \"react\";\nimport \"./home.scss\";\nimport axios from \"axios\";\n\nimport LogoImage from \"../assets/talent_front_logo.bmp\";\nimport WorkerImage from \"../assets/worker-clipart.png\";\nimport ProfessorImage from \"../assets/professor.jpg\";\nimport StudentImage from \"../assets/student.jpg\";\nimport OfficeImage from \"../assets/office.jpg\";\nimport TalkImage from \"../assets/talk.jpg\";\nimport ClassroomImage from \"../assets/classroom.jpg\";\nimport HiringImage from \"../assets/hiring-pipeline.jpg\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Jumbotron, Media } from \"react-bootstrap\";\n\nconst SearchSection = () => {\n  return (\n    <div className=\"search-container\">\n      <h1>Find your next internship or fulltime job</h1>\n      <p>\n        Take your first step into job seeking field with us. We make job seeking\n        process easier than anybody else.{\" \"}\n      </p>\n      <div className=\"search-suggestion-list\">\n        <Link to=\"/entries\">\n          <Button variant=\"light\"> Software Engineer </Button>\n        </Link>\n        <Link to=\"/entries\">\n          <Button variant=\"light\"> Product Manager </Button>\n        </Link>\n        <Link to=\"/entries\">\n          <Button variant=\"light\"> UI/UX Designer </Button>\n        </Link>\n        <Link to=\"/entries\">\n          <Button variant=\"light\"> Shift Manager </Button>\n        </Link>\n      </div>\n      <div className=\"search-suggestion-list\">\n        <Link to=\"/entries\">\n          <Button variant=\"light\"> Engineering Specialist </Button>\n        </Link>\n        <Link to=\"/entries\">\n          <Button variant=\"light\"> Manufacturing Technician </Button>\n        </Link>\n        <Link to=\"/entries\">\n          <Button variant=\"light\"> Shift Supervisor </Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst IntroSection = () => {\n  return (\n    <div className=\"landing-info-wrapper\">\n      <Jumbotron>\n        <h1>Welcome to Talent Front!</h1>\n        <p>\n          Talent Front is San Francisco State University's students, alumnis and\n          professors' professional networking space. Here you will be able to\n          alumnis and connect other students. Professors we didn't forget about\n          you! Professors will be able to recommend students for a job!\n        </p>\n        <Media>\n          <img\n            className=\"align-self-start mr-3\"\n            src={StudentImage}\n            width={80}\n            height={80}\n          />\n          <Media.Body>\n            <h4>Connect with thousands other students</h4>\n          </Media.Body>\n        </Media>\n        <Media>\n          <img\n            className=\"align-self-start mr-3\"\n            src={OfficeImage}\n            width={80}\n            height={80}\n          />\n          <Media.Body>\n            <h4>Network with alumnis</h4>\n          </Media.Body>\n        </Media>\n        <Media>\n          <img\n            className=\"align-self-start mr-3\"\n            src={ProfessorImage}\n            width={80}\n            height={80}\n          />\n          <Media.Body>\n            <h4>Get recommendations from professors</h4>\n          </Media.Body>\n        </Media>\n      </Jumbotron>\n      <img src={WorkerImage} />\n    </div>\n  );\n};\n\nconst JobSection = () => {\n  return (\n    <div className=\"job-search-home\">\n      <Media>\n        <Media.Body>\n          <img className=\"mr-3\" src={TalkImage} alt=\"Generic placeholder\" />\n          <h2>Expand your network</h2>\n          <h4>\n            Every 2 out of 3 hires are hired through referral. Stay in touch\n            with your colleagues and make new connections\n          </h4>\n        </Media.Body>\n      </Media>\n      <Media>\n        <Media.Body>\n          <img\n            className=\"mr-3\"\n            src={ClassroomImage}\n            alt=\"Generic placeholder\"\n          />\n          <h2>Help your students to succeed</h2>\n          <h4>\n            Your recommendation is valueable information for employers to figure\n            out who's right person for the job\n          </h4>\n        </Media.Body>\n      </Media>\n      <Media>\n        <Media.Body>\n          <img className=\"mr-3\" src={HiringImage} alt=\"Generic placeholder\" />\n          <h2>Hire right candidate</h2>\n          <h4>We make it easy and fast to hire from our rich pool of talent</h4>\n        </Media.Body>\n      </Media>\n    </div>\n  );\n};\n\nconst HomeScreen = () => {\n  return (\n    <div className=\"home-container\">\n      <IntroSection />\n      <SearchSection />\n      <JobSection />\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import React from \"react\";\nimport \"./App.sass\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"tailwindcss/tailwind.css\";\nimport Registration from \"./screens/registration\";\nimport Login from \"./screens/login\";\nimport PostingsScreen from \"./screens/postings/postings\";\nimport { CookiesProvider } from \"react-cookie\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ProfileScreenV2 from \"./screens/profile/profile.v2.js\";\nimport EntriesScreen from \"./screens/entries/entries\";\nimport Footer from \"./components/footer\";\nimport Navbar from \"./components/navbar\";\nimport PostingScreen from \"./screens/posting/posting\";\nimport CompanyScreen from \"./screens/company/company\";\nimport HomeScreen from \"./screens/home\";\n\nfunction App() {\n  return (\n    <CookiesProvider>\n      <div className=\"App\">\n        <Router>\n          <Navbar />\n          <Route path=\"/register\">\n            <Registration />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n\n          <Route path=\"/profile\" exact>\n            <ProfileScreenV2 />\n          </Route>\n\n          <Route path=\"/profile/:id\">\n            <ProfileScreenV2 />\n          </Route>\n\n          <Route path=\"/posting\" exact>\n            <PostingScreen />\n          </Route>\n\n          <Route path=\"/posting/:id\">\n            <PostingScreen />\n          </Route>\n\n          <Route path=\"/company/:id\">\n            <CompanyScreen />\n          </Route>\n\n          {/*<Route path=\"/postings\">*/}\n          {/*  <PostingsScreen />*/}\n          {/*</Route>*/}\n          <Route path=\"/entries\">\n            <EntriesScreen />\n          </Route>\n          <Route path=\"/\" exact>\n            {/*<EntriesScreen emptySearch={true}/>*/}\n            <HomeScreen />\n          </Route>\n        </Router>\n        <Footer />\n      </div>\n    </CookiesProvider>\n  );\n}\n\nexport default App;\n","import { createRequest } from \"../../request\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nexport const getUser = () => {\n  return createRequest({\n    params: {\n      cookie: cookies.get(\"talentfront-session\"),\n    },\n  })\n    .get(\"backend/api/user\")\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const postJobUser = (action) => {\n  const job = action.payload;\n  console.log(job);\n  return createRequest().post(\"backend/api/user/experience\", job);\n};\n\nexport const postEducationUser = (action) => {\n  const education = action.payload;\n  console.log(education);\n  return createRequest().post(\"backend/api/user/education\", {\n    ...education,\n    isFinished: false,\n  });\n};\n\nexport const postSkill = (action) => {\n  const skill = action.payload;\n  console.log(\"POST SKILL HANDLER FIRED\");\n  console.log(\"skill in the request\", skill);\n  return createRequest().post(\"backend/api/user/skill\", skill);\n};\n","import { call, put } from \"redux-saga/effects\";\nimport {\n  getUser,\n  postJobUser,\n  postEducationUser,\n  postSkill,\n} from \"../requests/user\";\nimport { setUser } from \"../../slices/user\";\n\nexport function* handleGetUser(action) {\n  try {\n    const response = yield call(getUser);\n    const { data } = response;\n    yield put(setUser(data));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* handleAddJob(action) {\n  try {\n    const response = yield call(postJobUser, action);\n    const { data } = response;\n    console.log(response);\n    // yield put(setUser(data));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* handleUpdateDegree(action) {\n  try {\n    const response = yield call(postEducationUser, action);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* handleUpdateSkill(action) {\n  try {\n    const response = yield call(postSkill, action);\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import { takeLatest, takeEvery } from \"redux-saga/effects\";\nimport { getUser, addJob, updateEducation, updateSkill } from \"../slices/user\";\nimport {\n  handleGetUser,\n  handleAddJob,\n  handleUpdateDegree,\n  handleUpdateSkill,\n} from \"./handlers/user\";\n\nexport function* watcherSaga() {\n  yield takeLatest(getUser.type, handleGetUser);\n  yield takeLatest(addJob.type, handleAddJob);\n  yield takeLatest(updateEducation.type, handleUpdateDegree);\n  yield takeEvery(updateSkill.type, handleUpdateSkill);\n}\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport userReducer from \"./slices/user\";\nimport searchReducer from \"./slices/search\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { watcherSaga } from \"./sagas/rootSaga\";\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst reducer = combineReducers({ user: userReducer, search: searchReducer });\n\nconst store = configureStore({\n  reducer,\n  middleware: [...getDefaultMiddleware({ thunk: false }), sagaMiddleWare],\n  devTools: true,\n});\n\nsagaMiddleWare.run(watcherSaga);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./utility/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}