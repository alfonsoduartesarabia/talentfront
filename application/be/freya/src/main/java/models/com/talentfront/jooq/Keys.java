/*
 * This file is generated by jOOQ.
 */
package com.talentfront.jooq;


import com.talentfront.jooq.tables.Media;
import com.talentfront.jooq.tables.Notification;
import com.talentfront.jooq.tables.Posting;
import com.talentfront.jooq.tables.PostingRecommendation;
import com.talentfront.jooq.tables.User;
import com.talentfront.jooq.tables.UserEducation;
import com.talentfront.jooq.tables.UserExperience;
import com.talentfront.jooq.tables.UserImage;
import com.talentfront.jooq.tables.UserInfo;
import com.talentfront.jooq.tables.UserPostingApply;
import com.talentfront.jooq.tables.UserRelationship;
import com.talentfront.jooq.tables.UserReview;
import com.talentfront.jooq.tables.UserSession;
import com.talentfront.jooq.tables.UserType;
import com.talentfront.jooq.tables.records.MediaRecord;
import com.talentfront.jooq.tables.records.NotificationRecord;
import com.talentfront.jooq.tables.records.PostingRecommendationRecord;
import com.talentfront.jooq.tables.records.PostingRecord;
import com.talentfront.jooq.tables.records.UserEducationRecord;
import com.talentfront.jooq.tables.records.UserExperienceRecord;
import com.talentfront.jooq.tables.records.UserImageRecord;
import com.talentfront.jooq.tables.records.UserInfoRecord;
import com.talentfront.jooq.tables.records.UserPostingApplyRecord;
import com.talentfront.jooq.tables.records.UserRecord;
import com.talentfront.jooq.tables.records.UserRelationshipRecord;
import com.talentfront.jooq.tables.records.UserReviewRecord;
import com.talentfront.jooq.tables.records.UserSessionRecord;
import com.talentfront.jooq.tables.records.UserTypeRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>db</code> schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.2",
        "schema version:5.1"
    },
    date = "2021-04-11T05:11:40.089Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<MediaRecord, Integer> IDENTITY_MEDIA = Identities0.IDENTITY_MEDIA;
    public static final Identity<NotificationRecord, Integer> IDENTITY_NOTIFICATION = Identities0.IDENTITY_NOTIFICATION;
    public static final Identity<PostingRecord, Integer> IDENTITY_POSTING = Identities0.IDENTITY_POSTING;
    public static final Identity<PostingRecommendationRecord, Integer> IDENTITY_POSTING_RECOMMENDATION = Identities0.IDENTITY_POSTING_RECOMMENDATION;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;
    public static final Identity<UserEducationRecord, Integer> IDENTITY_USER_EDUCATION = Identities0.IDENTITY_USER_EDUCATION;
    public static final Identity<UserExperienceRecord, Integer> IDENTITY_USER_EXPERIENCE = Identities0.IDENTITY_USER_EXPERIENCE;
    public static final Identity<UserImageRecord, Integer> IDENTITY_USER_IMAGE = Identities0.IDENTITY_USER_IMAGE;
    public static final Identity<UserInfoRecord, Integer> IDENTITY_USER_INFO = Identities0.IDENTITY_USER_INFO;
    public static final Identity<UserPostingApplyRecord, Integer> IDENTITY_USER_POSTING_APPLY = Identities0.IDENTITY_USER_POSTING_APPLY;
    public static final Identity<UserRelationshipRecord, Integer> IDENTITY_USER_RELATIONSHIP = Identities0.IDENTITY_USER_RELATIONSHIP;
    public static final Identity<UserReviewRecord, Integer> IDENTITY_USER_REVIEW = Identities0.IDENTITY_USER_REVIEW;
    public static final Identity<UserSessionRecord, Integer> IDENTITY_USER_SESSION = Identities0.IDENTITY_USER_SESSION;
    public static final Identity<UserTypeRecord, Integer> IDENTITY_USER_TYPE = Identities0.IDENTITY_USER_TYPE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<MediaRecord> KEY_MEDIA_PRIMARY = UniqueKeys0.KEY_MEDIA_PRIMARY;
    public static final UniqueKey<NotificationRecord> KEY_NOTIFICATION_PRIMARY = UniqueKeys0.KEY_NOTIFICATION_PRIMARY;
    public static final UniqueKey<PostingRecord> KEY_POSTING_PRIMARY = UniqueKeys0.KEY_POSTING_PRIMARY;
    public static final UniqueKey<PostingRecommendationRecord> KEY_POSTING_RECOMMENDATION_PRIMARY = UniqueKeys0.KEY_POSTING_RECOMMENDATION_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserEducationRecord> KEY_USER_EDUCATION_PRIMARY = UniqueKeys0.KEY_USER_EDUCATION_PRIMARY;
    public static final UniqueKey<UserExperienceRecord> KEY_USER_EXPERIENCE_PRIMARY = UniqueKeys0.KEY_USER_EXPERIENCE_PRIMARY;
    public static final UniqueKey<UserImageRecord> KEY_USER_IMAGE_PRIMARY = UniqueKeys0.KEY_USER_IMAGE_PRIMARY;
    public static final UniqueKey<UserInfoRecord> KEY_USER_INFO_PRIMARY = UniqueKeys0.KEY_USER_INFO_PRIMARY;
    public static final UniqueKey<UserPostingApplyRecord> KEY_USER_POSTING_APPLY_PRIMARY = UniqueKeys0.KEY_USER_POSTING_APPLY_PRIMARY;
    public static final UniqueKey<UserRelationshipRecord> KEY_USER_RELATIONSHIP_PRIMARY = UniqueKeys0.KEY_USER_RELATIONSHIP_PRIMARY;
    public static final UniqueKey<UserReviewRecord> KEY_USER_REVIEW_PRIMARY = UniqueKeys0.KEY_USER_REVIEW_PRIMARY;
    public static final UniqueKey<UserSessionRecord> KEY_USER_SESSION_PRIMARY = UniqueKeys0.KEY_USER_SESSION_PRIMARY;
    public static final UniqueKey<UserTypeRecord> KEY_USER_TYPE_PRIMARY = UniqueKeys0.KEY_USER_TYPE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MediaRecord, UserRecord> MEDIA_USER_ID_FK = ForeignKeys0.MEDIA_USER_ID_FK;
    public static final ForeignKey<NotificationRecord, UserRecord> NOTIFICATION_SENDER_ID_FK = ForeignKeys0.NOTIFICATION_SENDER_ID_FK;
    public static final ForeignKey<NotificationRecord, UserRecord> NOTIFICATION_RECIEVER_ID_FK = ForeignKeys0.NOTIFICATION_RECIEVER_ID_FK;
    public static final ForeignKey<PostingRecord, UserRecord> POSTING_USER_ID_FK = ForeignKeys0.POSTING_USER_ID_FK;
    public static final ForeignKey<PostingRecommendationRecord, UserRecord> POSTING_RECOMMENDATION_RECOMMENDER_ID_FK = ForeignKeys0.POSTING_RECOMMENDATION_RECOMMENDER_ID_FK;
    public static final ForeignKey<PostingRecommendationRecord, UserRecord> POSTING_RECOMMENDATION_RECOMMENDEE_ID_FK = ForeignKeys0.POSTING_RECOMMENDATION_RECOMMENDEE_ID_FK;
    public static final ForeignKey<PostingRecommendationRecord, PostingRecord> POSTING_RECOMMENDATION_POSTING_ID_FK = ForeignKeys0.POSTING_RECOMMENDATION_POSTING_ID_FK;
    public static final ForeignKey<UserRecord, UserTypeRecord> USER_TYPE_ID_FK = ForeignKeys0.USER_TYPE_ID_FK;
    public static final ForeignKey<UserEducationRecord, UserRecord> USER_EDUCATION_USER_ID_FK = ForeignKeys0.USER_EDUCATION_USER_ID_FK;
    public static final ForeignKey<UserExperienceRecord, UserRecord> USER_EXPERIENCE_USER_ID_FK = ForeignKeys0.USER_EXPERIENCE_USER_ID_FK;
    public static final ForeignKey<UserImageRecord, UserRecord> USER_IMAGE_USER_ID_FK = ForeignKeys0.USER_IMAGE_USER_ID_FK;
    public static final ForeignKey<UserInfoRecord, UserRecord> USER_INFO_USER_ID_FK = ForeignKeys0.USER_INFO_USER_ID_FK;
    public static final ForeignKey<UserPostingApplyRecord, UserRecord> USER_POSTING_APPLY_USER_ID_FK = ForeignKeys0.USER_POSTING_APPLY_USER_ID_FK;
    public static final ForeignKey<UserPostingApplyRecord, PostingRecord> USER_POSTING_APPLY_POSTING_ID_FK = ForeignKeys0.USER_POSTING_APPLY_POSTING_ID_FK;
    public static final ForeignKey<UserRelationshipRecord, UserRecord> USER_RELATIONSHIP_USER_FOLLOWER_ID_FK = ForeignKeys0.USER_RELATIONSHIP_USER_FOLLOWER_ID_FK;
    public static final ForeignKey<UserRelationshipRecord, UserRecord> USER_RELATIONSHIP_USER_FOLLOWEE_ID_FK = ForeignKeys0.USER_RELATIONSHIP_USER_FOLLOWEE_ID_FK;
    public static final ForeignKey<UserReviewRecord, UserRecord> USER_REVIEW_REVIEWER_ID_FK = ForeignKeys0.USER_REVIEW_REVIEWER_ID_FK;
    public static final ForeignKey<UserReviewRecord, UserRecord> USER_REVIEW_REVIEWEE_ID_FK = ForeignKeys0.USER_REVIEW_REVIEWEE_ID_FK;
    public static final ForeignKey<UserSessionRecord, UserRecord> USER_SESSION_USER_ID_FK = ForeignKeys0.USER_SESSION_USER_ID_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<MediaRecord, Integer> IDENTITY_MEDIA = Internal.createIdentity(Media.MEDIA, Media.MEDIA.MEDIA_ID);
        public static Identity<NotificationRecord, Integer> IDENTITY_NOTIFICATION = Internal.createIdentity(Notification.NOTIFICATION, Notification.NOTIFICATION.NOTIFICATION_ID);
        public static Identity<PostingRecord, Integer> IDENTITY_POSTING = Internal.createIdentity(Posting.POSTING, Posting.POSTING.POSTING_ID);
        public static Identity<PostingRecommendationRecord, Integer> IDENTITY_POSTING_RECOMMENDATION = Internal.createIdentity(PostingRecommendation.POSTING_RECOMMENDATION, PostingRecommendation.POSTING_RECOMMENDATION.POSTING_RECOMMENDATION_ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.USER_ID);
        public static Identity<UserEducationRecord, Integer> IDENTITY_USER_EDUCATION = Internal.createIdentity(UserEducation.USER_EDUCATION, UserEducation.USER_EDUCATION.USER_EDUCATION_ID);
        public static Identity<UserExperienceRecord, Integer> IDENTITY_USER_EXPERIENCE = Internal.createIdentity(UserExperience.USER_EXPERIENCE, UserExperience.USER_EXPERIENCE.USER_EXEPERINCE_ID);
        public static Identity<UserImageRecord, Integer> IDENTITY_USER_IMAGE = Internal.createIdentity(UserImage.USER_IMAGE, UserImage.USER_IMAGE.USER_IMAGE_ID);
        public static Identity<UserInfoRecord, Integer> IDENTITY_USER_INFO = Internal.createIdentity(UserInfo.USER_INFO, UserInfo.USER_INFO.USER_INFO_ID);
        public static Identity<UserPostingApplyRecord, Integer> IDENTITY_USER_POSTING_APPLY = Internal.createIdentity(UserPostingApply.USER_POSTING_APPLY, UserPostingApply.USER_POSTING_APPLY.USER_POSTING_APPLY_ID);
        public static Identity<UserRelationshipRecord, Integer> IDENTITY_USER_RELATIONSHIP = Internal.createIdentity(UserRelationship.USER_RELATIONSHIP, UserRelationship.USER_RELATIONSHIP.USER_RELATIONSHIP_ID);
        public static Identity<UserReviewRecord, Integer> IDENTITY_USER_REVIEW = Internal.createIdentity(UserReview.USER_REVIEW, UserReview.USER_REVIEW.USER_REVIEW_ID);
        public static Identity<UserSessionRecord, Integer> IDENTITY_USER_SESSION = Internal.createIdentity(UserSession.USER_SESSION, UserSession.USER_SESSION.USER_SESSION_ID);
        public static Identity<UserTypeRecord, Integer> IDENTITY_USER_TYPE = Internal.createIdentity(UserType.USER_TYPE, UserType.USER_TYPE.USER_TYPE_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<MediaRecord> KEY_MEDIA_PRIMARY = Internal.createUniqueKey(Media.MEDIA, "KEY_media_PRIMARY", new TableField[] { Media.MEDIA.MEDIA_ID }, true);
        public static final UniqueKey<NotificationRecord> KEY_NOTIFICATION_PRIMARY = Internal.createUniqueKey(Notification.NOTIFICATION, "KEY_notification_PRIMARY", new TableField[] { Notification.NOTIFICATION.NOTIFICATION_ID }, true);
        public static final UniqueKey<PostingRecord> KEY_POSTING_PRIMARY = Internal.createUniqueKey(Posting.POSTING, "KEY_posting_PRIMARY", new TableField[] { Posting.POSTING.POSTING_ID }, true);
        public static final UniqueKey<PostingRecommendationRecord> KEY_POSTING_RECOMMENDATION_PRIMARY = Internal.createUniqueKey(PostingRecommendation.POSTING_RECOMMENDATION, "KEY_posting_recommendation_PRIMARY", new TableField[] { PostingRecommendation.POSTING_RECOMMENDATION.POSTING_RECOMMENDATION_ID }, true);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", new TableField[] { User.USER.USER_ID }, true);
        public static final UniqueKey<UserEducationRecord> KEY_USER_EDUCATION_PRIMARY = Internal.createUniqueKey(UserEducation.USER_EDUCATION, "KEY_user_education_PRIMARY", new TableField[] { UserEducation.USER_EDUCATION.USER_EDUCATION_ID }, true);
        public static final UniqueKey<UserExperienceRecord> KEY_USER_EXPERIENCE_PRIMARY = Internal.createUniqueKey(UserExperience.USER_EXPERIENCE, "KEY_user_experience_PRIMARY", new TableField[] { UserExperience.USER_EXPERIENCE.USER_EXEPERINCE_ID }, true);
        public static final UniqueKey<UserImageRecord> KEY_USER_IMAGE_PRIMARY = Internal.createUniqueKey(UserImage.USER_IMAGE, "KEY_user_image_PRIMARY", new TableField[] { UserImage.USER_IMAGE.USER_IMAGE_ID }, true);
        public static final UniqueKey<UserInfoRecord> KEY_USER_INFO_PRIMARY = Internal.createUniqueKey(UserInfo.USER_INFO, "KEY_user_info_PRIMARY", new TableField[] { UserInfo.USER_INFO.USER_INFO_ID }, true);
        public static final UniqueKey<UserPostingApplyRecord> KEY_USER_POSTING_APPLY_PRIMARY = Internal.createUniqueKey(UserPostingApply.USER_POSTING_APPLY, "KEY_user_posting_apply_PRIMARY", new TableField[] { UserPostingApply.USER_POSTING_APPLY.USER_POSTING_APPLY_ID }, true);
        public static final UniqueKey<UserRelationshipRecord> KEY_USER_RELATIONSHIP_PRIMARY = Internal.createUniqueKey(UserRelationship.USER_RELATIONSHIP, "KEY_user_relationship_PRIMARY", new TableField[] { UserRelationship.USER_RELATIONSHIP.USER_RELATIONSHIP_ID }, true);
        public static final UniqueKey<UserReviewRecord> KEY_USER_REVIEW_PRIMARY = Internal.createUniqueKey(UserReview.USER_REVIEW, "KEY_user_review_PRIMARY", new TableField[] { UserReview.USER_REVIEW.USER_REVIEW_ID }, true);
        public static final UniqueKey<UserSessionRecord> KEY_USER_SESSION_PRIMARY = Internal.createUniqueKey(UserSession.USER_SESSION, "KEY_user_session_PRIMARY", new TableField[] { UserSession.USER_SESSION.USER_SESSION_ID }, true);
        public static final UniqueKey<UserTypeRecord> KEY_USER_TYPE_PRIMARY = Internal.createUniqueKey(UserType.USER_TYPE, "KEY_user_type_PRIMARY", new TableField[] { UserType.USER_TYPE.USER_TYPE_ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<MediaRecord, UserRecord> MEDIA_USER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, Media.MEDIA, "media_user_id_fk", new TableField[] { Media.MEDIA.USER_ID }, true);
        public static final ForeignKey<NotificationRecord, UserRecord> NOTIFICATION_SENDER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, Notification.NOTIFICATION, "notification_sender_id_fk", new TableField[] { Notification.NOTIFICATION.SENDER_ID }, true);
        public static final ForeignKey<NotificationRecord, UserRecord> NOTIFICATION_RECIEVER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, Notification.NOTIFICATION, "notification_reciever_id_fk", new TableField[] { Notification.NOTIFICATION.RECIEVER_ID }, true);
        public static final ForeignKey<PostingRecord, UserRecord> POSTING_USER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, Posting.POSTING, "posting_user_id_fk", new TableField[] { Posting.POSTING.USER_ID }, true);
        public static final ForeignKey<PostingRecommendationRecord, UserRecord> POSTING_RECOMMENDATION_RECOMMENDER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, PostingRecommendation.POSTING_RECOMMENDATION, "posting_recommendation_recommender_id_fk", new TableField[] { PostingRecommendation.POSTING_RECOMMENDATION.RECOMMENDER_ID }, true);
        public static final ForeignKey<PostingRecommendationRecord, UserRecord> POSTING_RECOMMENDATION_RECOMMENDEE_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, PostingRecommendation.POSTING_RECOMMENDATION, "posting_recommendation_recommendee_id_fk", new TableField[] { PostingRecommendation.POSTING_RECOMMENDATION.RECOMMENDEE_ID }, true);
        public static final ForeignKey<PostingRecommendationRecord, PostingRecord> POSTING_RECOMMENDATION_POSTING_ID_FK = Internal.createForeignKey(Keys.KEY_POSTING_PRIMARY, PostingRecommendation.POSTING_RECOMMENDATION, "posting_recommendation_posting_id_fk", new TableField[] { PostingRecommendation.POSTING_RECOMMENDATION.POSTING_ID }, true);
        public static final ForeignKey<UserRecord, UserTypeRecord> USER_TYPE_ID_FK = Internal.createForeignKey(Keys.KEY_USER_TYPE_PRIMARY, User.USER, "user_type_id_fk", new TableField[] { User.USER.USER_TYPE_ID }, true);
        public static final ForeignKey<UserEducationRecord, UserRecord> USER_EDUCATION_USER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserEducation.USER_EDUCATION, "user_education_user_id_fk", new TableField[] { UserEducation.USER_EDUCATION.USER_ID }, true);
        public static final ForeignKey<UserExperienceRecord, UserRecord> USER_EXPERIENCE_USER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserExperience.USER_EXPERIENCE, "user_experience_user_id_fk", new TableField[] { UserExperience.USER_EXPERIENCE.USER_ID }, true);
        public static final ForeignKey<UserImageRecord, UserRecord> USER_IMAGE_USER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserImage.USER_IMAGE, "user_image_user_id_fk", new TableField[] { UserImage.USER_IMAGE.USER_ID }, true);
        public static final ForeignKey<UserInfoRecord, UserRecord> USER_INFO_USER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserInfo.USER_INFO, "user_info_user_id_fk", new TableField[] { UserInfo.USER_INFO.USER_ID }, true);
        public static final ForeignKey<UserPostingApplyRecord, UserRecord> USER_POSTING_APPLY_USER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserPostingApply.USER_POSTING_APPLY, "user_posting_apply_user_id_fk", new TableField[] { UserPostingApply.USER_POSTING_APPLY.APPLICANT_ID }, true);
        public static final ForeignKey<UserPostingApplyRecord, PostingRecord> USER_POSTING_APPLY_POSTING_ID_FK = Internal.createForeignKey(Keys.KEY_POSTING_PRIMARY, UserPostingApply.USER_POSTING_APPLY, "user_posting_apply_posting_id_fk", new TableField[] { UserPostingApply.USER_POSTING_APPLY.POSTING_ID }, true);
        public static final ForeignKey<UserRelationshipRecord, UserRecord> USER_RELATIONSHIP_USER_FOLLOWER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserRelationship.USER_RELATIONSHIP, "user_relationship_user_follower_id_fk", new TableField[] { UserRelationship.USER_RELATIONSHIP.USER_FOLLOWER_ID }, true);
        public static final ForeignKey<UserRelationshipRecord, UserRecord> USER_RELATIONSHIP_USER_FOLLOWEE_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserRelationship.USER_RELATIONSHIP, "user_relationship_user_followee_id_fk", new TableField[] { UserRelationship.USER_RELATIONSHIP.USER_FOLLOWEE_ID }, true);
        public static final ForeignKey<UserReviewRecord, UserRecord> USER_REVIEW_REVIEWER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserReview.USER_REVIEW, "user_review_reviewer_id_fk", new TableField[] { UserReview.USER_REVIEW.REVIEWER_ID }, true);
        public static final ForeignKey<UserReviewRecord, UserRecord> USER_REVIEW_REVIEWEE_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserReview.USER_REVIEW, "user_review_reviewee_id_fk", new TableField[] { UserReview.USER_REVIEW.REVIEWEE_ID }, true);
        public static final ForeignKey<UserSessionRecord, UserRecord> USER_SESSION_USER_ID_FK = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, UserSession.USER_SESSION, "user_session_user_id_fk", new TableField[] { UserSession.USER_SESSION.USER_ID }, true);
    }
}
