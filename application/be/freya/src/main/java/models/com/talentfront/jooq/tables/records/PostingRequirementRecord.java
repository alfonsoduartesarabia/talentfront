/*
 * This file is generated by jOOQ.
 */
package com.talentfront.jooq.tables.records;


import com.talentfront.jooq.tables.PostingRequirement;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.2",
        "schema version:9.1"
    },
    date = "2021-05-08T19:27:48.680Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostingRequirementRecord extends UpdatableRecordImpl<PostingRequirementRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = 577505073;

    /**
     * Setter for <code>db.posting_requirement.posting_requirement_id</code>.
     */
    public void setPostingRequirementId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>db.posting_requirement.posting_requirement_id</code>.
     */
    public Integer getPostingRequirementId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>db.posting_requirement.posting_id</code>.
     */
    public void setPostingId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>db.posting_requirement.posting_id</code>.
     */
    public Integer getPostingId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>db.posting_requirement.requirement</code>.
     */
    public void setRequirement(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>db.posting_requirement.requirement</code>.
     */
    public String getRequirement() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PostingRequirement.POSTING_REQUIREMENT.POSTING_REQUIREMENT_ID;
    }

    @Override
    public Field<Integer> field2() {
        return PostingRequirement.POSTING_REQUIREMENT.POSTING_ID;
    }

    @Override
    public Field<String> field3() {
        return PostingRequirement.POSTING_REQUIREMENT.REQUIREMENT;
    }

    @Override
    public Integer component1() {
        return getPostingRequirementId();
    }

    @Override
    public Integer component2() {
        return getPostingId();
    }

    @Override
    public String component3() {
        return getRequirement();
    }

    @Override
    public Integer value1() {
        return getPostingRequirementId();
    }

    @Override
    public Integer value2() {
        return getPostingId();
    }

    @Override
    public String value3() {
        return getRequirement();
    }

    @Override
    public PostingRequirementRecord value1(Integer value) {
        setPostingRequirementId(value);
        return this;
    }

    @Override
    public PostingRequirementRecord value2(Integer value) {
        setPostingId(value);
        return this;
    }

    @Override
    public PostingRequirementRecord value3(String value) {
        setRequirement(value);
        return this;
    }

    @Override
    public PostingRequirementRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostingRequirementRecord
     */
    public PostingRequirementRecord() {
        super(PostingRequirement.POSTING_REQUIREMENT);
    }

    /**
     * Create a detached, initialised PostingRequirementRecord
     */
    public PostingRequirementRecord(Integer postingRequirementId, Integer postingId, String requirement) {
        super(PostingRequirement.POSTING_REQUIREMENT);

        set(0, postingRequirementId);
        set(1, postingId);
        set(2, requirement);
    }
}
